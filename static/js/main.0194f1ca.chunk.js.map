{"version":3,"sources":["components/Header/index.js","actions/index.js","actions/types.js","components/User.js","containers/UserList.js","App.js","reducers/rootReducer.js","createStore.js","index.js"],"names":["Header","className","this","props","appName","React","Component","setUsers","users","type","payload","connect","toggleInterest","user","capitalize","arr","map","str","toUpperCase","slice","join","onClick","style","border","interest","src","picture","large","alt","name","first","last","title","email","phone","UserList","getUsers","key","uuid","state","dispatch","fetch","then","res","json","data","results","userData","App","initialstate","store","createStore","action","userId","login","updatedUsers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"qUAgBeA,G,6LAPP,OACI,4BAAQC,UAAU,cACd,4BAAKC,KAAKC,MAAMC,c,GARXC,IAAMC,Y,4PCE3B,IAgBMC,EAAW,SAACC,GAChB,MAAQ,CACNC,KCvBqB,YDwBrBC,QAASF,IEWEG,cAAQ,KAAM,CAACC,eFPA,SAACC,GAC7B,MAAQ,CACNJ,KC7B2B,kBD8B3BC,QAASG,KEIEF,CA/BF,SAACR,GAEZ,IAAMW,EAAa,SAACC,GAClB,OAAOA,EAAIC,IAAI,SAAAC,GAEb,OADuBA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,KAEvDC,KAAK,MAGV,OACE,yBAAKC,QAAS,kBAAMlB,EAAMS,eAAeT,IAAQF,UAAU,OAAOqB,MAAO,CAACC,OAAQpB,EAAMqB,SAAW,mBAAqB,OACtH,yBAAKvB,UAAU,WACb,yBAAKwB,IAAKtB,EAAMuB,QAAQC,MAAOC,IAAKd,EAAW,CAACX,EAAM0B,KAAKC,MAAO3B,EAAM0B,KAAKE,UAE/E,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,QACb,8BAAOa,EAAW,CAACX,EAAM0B,KAAKG,QAA9B,KACA,8BAAOlB,EAAW,CAACX,EAAM0B,KAAKC,QAA9B,KACA,8BAAOhB,EAAW,CAACX,EAAM0B,KAAKE,OAA9B,MAEF,yBAAK9B,UAAU,SACb,8BAAOE,EAAM8B,QAEf,yBAAKhC,UAAU,SACb,8BAAOE,EAAM+B,YCpBjBC,E,4LAGFjC,KAAKC,MAAMiC,a,+BAIX,OACE,yBAAKnC,UAAU,YAEXC,KAAKC,MAAMK,MAAMQ,IAAI,SAAAH,GACnB,OACE,kBAAC,EAAD,eAAMwB,IAAKC,OAAYzB,W,GAZdR,IAAMC,WAqBdK,cAAQ,SAAA4B,GAAK,OAAIA,GAAO,CAAEH,SHtBjB,kBAAM,SAAAI,GAC5BC,MAHc,yCAIXC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,IAAMrC,EAAQqC,EAAKC,QAAQ9B,IAAI,SAAA+B,GAC7B,O,qVAAO,CAAP,GACKA,EADL,CAEEvB,UAAU,MAGdgB,EAASjC,EAASC,SGYTG,CAAsCwB,GCXtCa,E,iLATP,OACI,yBAAK/C,UAAU,OACX,kBAAC,EAAD,CAAQG,QAAQ,cAChB,kBAAC,EAAD,W,GALEE,a,kkBCLlB,IAAM2C,EAAe,CACnBzC,MAAO,ICGM0C,EAFDC,YDEC,WAAmC,IAAlCZ,EAAiC,uDAAzBU,EAAcG,EAAW,uCAC/C,OAAQA,EAAO3C,MACb,IJRqB,YISnB,IAAMD,EAAQ4C,EAAO1C,QACrB,OAAO,KACF6B,EADL,CAEE/B,UAEJ,IJb2B,kBIczB,IAAM6C,EAASD,EAAO1C,QAAQ4C,MAAMhB,KAC9BiB,EAAehB,EAAM/B,MAAMQ,IAAI,SAAAH,GACnC,OAAIA,EAAKyC,MAAMhB,OAASe,EACf,KACFxC,EADL,CAEEW,UAAWX,EAAKW,WAGXX,IAGX,OAAO,KACF0B,EADL,CAEE/B,MAAO+C,IAEX,QACE,OAAOhB,IC3B0BiB,YAAgBC,MCIvDC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,OAEFU,SAASC,eAAe,W","file":"static/js/main.0194f1ca.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n    static propTypes = {\n        appName: PropTypes.string,\n    }\n\n    render() {\n        return(\n            <header className=\"App-header\">\n                <h1>{this.props.appName}</h1>\n            </header>);\n    }\n}\n\nexport default Header;\n","import { \n  SET_USERS,\n  TOGGLE_INTEREST\n} from './types'\n\nconst API_URL = 'https://randomuser.me/api/?results=20'\n\nexport const getUsers = () => dispatch => {\n  fetch(API_URL)\n    .then(res => res.json())\n    .then(data => {\n      const users = data.results.map(userData => {\n        return ({\n          ...userData,\n          interest: false\n        })\n      })\n      dispatch(setUsers(users))\n    })\n}\n\nconst setUsers = (users) => {\n  return ({\n    type: SET_USERS,\n    payload: users\n  })\n}\n\nexport const toggleInterest = (user) => {\n  return ({\n    type: TOGGLE_INTEREST,\n    payload: user\n  })\n}","export const SET_USERS = 'SET_USERS'\nexport const TOGGLE_INTEREST = 'TOGGLE_INTEREST'","import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleInterest } from '../actions'\n\nconst User = (props) => {\n\n  const capitalize = (arr) => {\n    return arr.map(str => {\n      const capitalizedStr = str[0].toUpperCase() + str.slice(1)\n      return capitalizedStr\n    }).join(' ')\n  }\n\n  return (\n    <div onClick={() => props.toggleInterest(props)} className=\"user\" style={{border: props.interest ? '15px green solid' : null}}>\n      <div className=\"picture\">\n        <img src={props.picture.large} alt={capitalize([props.name.first, props.name.last])} />\n      </div>\n      <div className=\"info\">\n        <div className=\"name\">\n          <span>{capitalize([props.name.title])} </span>\n          <span>{capitalize([props.name.first])} </span>\n          <span>{capitalize([props.name.last])} </span>\n        </div>\n        <div className=\"email\">\n          <span>{props.email}</span>\n        </div>\n        <div className=\"phone\">\n          <span>{props.phone}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect(null, {toggleInterest})(User)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport uuid from 'uuid'\n\nimport User from '../components/User'\n\nimport { getUsers } from '../actions'\n\nclass UserList extends React.Component {\n\n  componentDidMount() {\n    this.props.getUsers()\n  }\n\n  render() {\n    return (\n      <div className=\"userList\">\n        {\n          this.props.users.map(user => {\n            return (\n              <User key={uuid()} {...user} />\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default connect(state => state, { getUsers })(UserList)","import React, { Component } from 'react';\nimport './styles/App.css';\nimport './styles/userList.css';\n\nimport Header from './components/Header';\nimport UserList from './containers/UserList';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header appName=\"SuperDate\"/>\n                <UserList />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { SET_USERS, TOGGLE_INTEREST } from \"../actions/types\";\n\nconst initialstate = {\n  users: []\n}\n\nexport default (state = initialstate, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      const users = action.payload\n      return {\n        ...state,\n        users\n      }\n    case TOGGLE_INTEREST:\n      const userId = action.payload.login.uuid\n      const updatedUsers = state.users.map(user => {\n        if (user.login.uuid === userId) {\n          return ({\n            ...user,\n            interest: !user.interest\n          })\n        } else {\n          return user\n        }\n      })\n      return {\n        ...state,\n        users: updatedUsers\n      }\n    default:\n      return state;\n  }\n}","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './createStore'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}